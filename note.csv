CREATE TABLE resume(
resumeID INT AUTO_INCREMENT PRIMARY KEY,
first_name VARCHAR(50) NOT NULL,
last_name VARCHAR(50) NOT NULL,
email VARCHAR(100) NOT NULL UNIQUE,
userpassword VARCHAR(200) NOT NULL
);

CREATE TABLE users(
	id INT AUTO_INCREMENT PRIMARY KEY,
	first_name VARCHAR(50) NOT NULL,
	last_name VARCHAR(50) NOT NULL,
	email VARCHAR(100) NOT NULL UNIQUE,
	userpassword VARCHAR(200) NOT NULL
);

CREATE TABLE applicant(
	applicant_id INT AUTO_INCREMENT PRIMARY KEY,
	user_id INT,
	FOREGIN KEY(user_id) REFERENCES users(id)
);

CREATE TABLE jobProvider (
    provider_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    company_name VARCHAR(100),
    company_email VARCHAR(100),
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE



///////////////////////////////////

temp1 - general overall
temp2 - projects + education -> students
temp3 - experience + skills -> worker experience
temp4 - summary + skills + certifications -> career changer
temp5 - project + skills + tools -> freelancer
temp6 - volunteer added -> student + temp2
temp7 - certifications -> student + temp2
temp8 - general simple



               <aside className="sidebar">
                    <ul className="menu-links">
                        <li className="nav-link active">
                            <a href="#">
                                <i className='bx bx-templates icon'></i>
                                <span className="text nav-text">Templates</span>
                            </a>
                        </li>
                        <li className="nav-link">
                            <a href="#">
                                <i className='bx bx-font icon'></i>
                                <span className="text nav-text">Text</span>
                            </a>
                        </li>
                        <li className="nav-link">
                            <a href="#">
                                <i className='bx bx-ai-write icon'></i>
                                <span className="text ai-text">AI Write</span>
                            </a>
                        </li>
                    </ul>
                </aside>

                <section className="AI-input-section">
                    <h2>
                        <input
                            type="text"
                            id="heading-section"
                            value={heading}
                            onChange={(e) => setHeading(e.target.value)}
                        />
                    </h2>
                    <textarea placeholder="description"></textarea>
                    <button className="enterBtn">Enter</button>
                </section>



/////////////////////


import React, { useState } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import '../css/editTemp.css';
import '../css/templatepicker.css';


function Resume() {
    const navigate = useNavigate();
    const location = useLocation();
    const { template, selectedColor, alignment } = location.state || {};
    const [step, setStep] = useState(0);
    const totalSteps = 4; // increase if you add more sections


    const [fullName, setFullName] = useState(template?.sections.find(s => s.type === 'header')?.name || '');
    const [email, setEmail] = useState(template?.sections.find(s => s.type === 'header')?.email || '');
    const [address, setAddress] = useState(template?.sections.find(s => s.type === 'header')?.address || '');
    const [phone, setPhone] = useState(template?.sections.find(s => s.type === 'header')?.phone || '');
    const [summary, setSummary] = useState(template?.sections.find(s => s.type === 'summary')?.text);



    const backTemplatePage = () => {
        navigate("/choosetemplate");
    };

    const renderFormSection = () => {
    switch (step) {
        case 0:
            return (
                <>
                    <h2>Personal Info</h2>
                    <label>Full Name</label>
                    <input type="text" value={fullName} onChange={(e) => setFullName(e.target.value)} />

                    <label>Email</label>
                    <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} />

                    <label>Address</label>
                    <input type="text" value={address} onChange={(e) => setAddress(e.target.value)} />

                    <label>Phone</label>
                    <input type="text" value={phone} onChange={(e) => setPhone(e.target.value)} />
                </>
            );
        case 1:
            return (
                <>
                    <h2>Summary</h2>
                    <textarea
                        value={summary}
                        onChange={(e) => setSummary(e.target.value)}
                        placeholder="Write a professional summary"
                    />
                </>
            );
        case 2:
            return (
                <>
                    <h2>Experience</h2>
                    {/* Add experience fields or dynamic mapping here */}
                    <p>Add experience editing here...</p>
                </>
            );
        case 3:
            return (
                <>
                    <h2>Education</h2>
                    <p>Add education editing here...</p>
                </>
            );
        // Add more cases for skills, certifications, etc.
        default:
            return <p>Form complete.</p>;
    }
};

const handleSubmit = () => {
    // Save to database or show preview
    console.log("Final form data:", {
        fullName,
        email,
        address,
        phone,
        summary
    });
    alert("Resume saved!");
};

    return (
        <div>
            <nav>
                <div className="navheader">
                    <div className="navlogo">
                        <a href="#" className="logo">Rezume<span>Job</span></a>
                    </div>
                    <ul className="menuBar">
                        <li><a onClick={backTemplatePage} style={{ cursor: "pointer" }}>Back to Dashboard</a></li>
                    </ul>
                </div>
            </nav>

            <div className="editor-container">
                {/* Sidebar
                <aside className="sidebar">
                    <ul className="menu-links">
                        <li className="nav-link active">
                            <a href="#">
                                <i className='bx bx-templates icon'></i>
                                <span className="text nav-text">Templates</span>
                            </a>
                        </li>
                        <li className="nav-link">
                            <a href="#">
                                <i className='bx bx-font icon'></i>
                                <span className="text nav-text">Text</span>
                            </a>
                        </li>
                        <li className="nav-link">
                            <a href="#">
                                <i className='bx bx-brain icon'></i>
                                <span className="text ai-text">AI Write</span>
                            </a>
                        </li>
                    </ul>
                </aside> */}

                <div className="main-layout">
                    <div className="resume-preview" style={{ textAlign: alignment }}>
                        {template?.sections.map((section, idx) => {
                            switch (section.type) {
                                case 'header':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h1 style={{ color: selectedColor }}>{fullName || section.name}</h1>
                                            <p>{address || section.address} | {phone || section.phone} | {email || section.email}</p>
                                        </section>
                                    );
                                case 'summary':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>Professional Summary</h2>
                                            <p>{summary || section.text}</p>
                                        </section>
                                    );
                                case 'experience':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>Experience</h2>
                                            {section.list.map((job, i) => (
                                                <div key={i}>
                                                    <strong>{job.role}</strong> – {job.company} ({job.startDate} - {job.endDate})
                                                    <p>{job.description}</p>
                                                </div>
                                            ))}
                                        </section>
                                    );
                                case 'education':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>Education</h2>
                                            {section.list.map((edu, i) => (
                                                <div key={i}>
                                                    <strong>{edu.degree}</strong> – {edu.school} ({edu.startDate} - {edu.endDate})
                                                </div>
                                            ))}
                                        </section>
                                    );
                                case 'skills':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>Skills</h2>
                                            <p>{section.list.join(', ')}</p>
                                        </section>
                                    );
                                case 'certifications':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>Certifications</h2>
                                            <ul>{section.list.map((cert, i) => <li key={i}>{cert}</li>)}</ul>
                                        </section>
                                    );
                                case 'language':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>Languages</h2>
                                            <ul>
                                                {section.list.map((lang, i) => (
                                                    <li key={i}>{lang.language} – {lang.proficiency}</li>
                                                ))}
                                            </ul>
                                        </section>
                                    );
                                case 'references':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>References</h2>
                                            {section.list.map((ref, i) => (
                                                <div key={i}>
                                                    <p><strong>{ref.name}</strong>, {ref.position} at {ref.company}</p>
                                                    <p>Email: {ref.email} | Phone: {ref.phone}</p>
                                                </div>
                                            ))}
                                        </section>
                                    );
                                case 'project':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>Projects</h2>
                                            {section.list.map((proj, i) => (
                                                <div key={i}>
                                                    <strong>{proj.title}</strong>
                                                    <p>{proj.description}</p>
                                                </div>
                                            ))}
                                        </section>
                                    );
                                case 'volunteer':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>Volunteer Experience</h2>
                                            {section.list.map((vol, i) => (
                                                <div key={i}>
                                                    <strong>{vol.role}</strong> – {vol.organization} ({vol.startDate} - {vol.endDate})
                                                    <p>{vol.description}</p>
                                                </div>
                                            ))}
                                        </section>
                                    );
                                default:
                                    return null;
                            }
                        })}
                    </div>
                </div>

<div className="form-navigation">
    {step > 0 && (
        <button onClick={() => setStep(step - 1)}>Previous</button>
    )}
    {step < totalSteps - 1 ? (
        <button onClick={() => setStep(step + 1)}>Next</button>
    ) : (
        <button onClick={handleSubmit}>Save</button>
    )}
</div>
<section className="input-field-section">
    {renderFormSection()}

    <div className="form-navigation">
        {step > 0 && <button onClick={() => setStep(step - 1)}>Previous</button>}
        {step < totalSteps - 1
            ? <button onClick={() => setStep(step + 1)}>Next</button>
            : <button onClick={handleSubmit}>Save</button>}
    </div>
</section>

            </div>
        </div>
    );
}

export default Resume;


////////////////////
css for editresume

/* ========== GLOBAL ========== */
body {
    background-color: #f9f9f9;
    color: #333;
}

/* ========== NAVIGATION BAR ========== */
.navheader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px 30px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
    background-color: white;
}

.menuBar {
    display: flex;
    align-items: center;
    gap: 20px;
    list-style: none;
}

/* ========== LAYOUT ========== */
.editor-container {
    display: flex;
    min-height: calc(100vh - 80px);
}

/* ========== SIDEBAR ========== */
.sidebar {
    width: 220px;
    background-color: #fff;
    border-right: 1px solid #eee;
    padding: 30px 20px;
    box-shadow: 2px 0 6px rgba(0, 0, 0, 0.04);
}

.menu-links {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

.menu-links li {
    margin: 25px 0;
}

.menu-links a {
    text-decoration: none;
    color: #555;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 10px;
    transition: 0.3s ease;
}

.menu-links a:hover,
.menu-links .nav-link.active a {
    color: #728BE4;
}

/* ========== MAIN CONTENT ========== */
.main-layout {
    flex: 1;
    padding: 40px;
    background-color: #fdfdfd;
    display: flex;
    flex-direction: column;
    gap: 30px;
}

/* ========== RESUME PREVIEW ========== */
.resume-preview {
    background-color: #fff;
    border: 1px solid #ddd;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
    padding: 30px;
    border-radius: 8px;
}

.resume-preview h1 {
    font-size: 24px;
    margin-bottom: 10px;
}

.resume-preview p {
    font-size: 14px;
    margin-bottom: 5px;
}

/* ========== INPUT FIELD SECTION ========== */
.input-field-section {
    background-color: #fff;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
}

.input-field-section label {
    font-weight: 500;
    display: block;
    margin-bottom: 5px;
}

.input-field-section input,
.input-field-section textarea {
    width: 100%;
    padding: 10px 12px;
    margin-bottom: 20px;
    border: 1px solid #ccc;
    border-radius: 6px;
    font-size: 14px;
}

/* ========== FORM NAVIGATION ========== */
.form-navigation {
    display: flex;
    justify-content: space-between;
    margin-top: 20px;
}

.form-navigation button {
    padding: 10px 20px;
    font-weight: 600;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    transition: 0.2s;
}

.form-navigation button:hover {
    background-color: #728BE4;
    color: white;
}

/* ========== RESPONSIVE DESIGN ========== */
@media (max-width: 768px) {
    .editor-container {
        flex-direction: column;
    }

    .sidebar {
        width: 100%;
        border-right: none;
        border-bottom: 1px solid #eee;
    }

    .main-layout {
        padding: 20px;
    }

    .resume-preview {
        font-size: 14px;
    }
}

////////////

                {/* Sidebar

                <div className="main-layout">
                    <div className="resume-preview" style={{ textAlign: alignment }}>
                        {template?.sections.map((section, idx) => {
                            switch (section.type) {
                                case 'header':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h1 style={{ color: selectedColor }}>{fullName || section.name}</h1>
                                            <p>{address || section.address} | {phone || section.phone} | {email || section.email}</p>
                                        </section>
                                    );
                                case 'summary':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>Professional Summary</h2>
                                            <p>{summary || section.text}</p>
                                        </section>
                                    );
                                case 'experience':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>Experience</h2>
                                            {section.list.map((job, i) => (
                                                <div key={i}>
                                                    <strong>{job.role}</strong> – {job.company} ({job.startDate} - {job.endDate})
                                                    <p>{job.description}</p>
                                                </div>
                                            ))}
                                        </section>
                                    );
                                case 'education':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>Education</h2>
                                            {section.list.map((edu, i) => (
                                                <div key={i}>
                                                    <strong>{edu.degree}</strong> – {edu.school} ({edu.startDate} - {edu.endDate})
                                                </div>
                                            ))}
                                        </section>
                                    );
                                case 'skills':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>Skills</h2>
                                            <p>{section.list.join(', ')}</p>
                                        </section>
                                    );
                                case 'certifications':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>Certifications</h2>
                                            <ul>{section.list.map((cert, i) => <li key={i}>{cert}</li>)}</ul>
                                        </section>
                                    );
                                case 'language':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>Languages</h2>
                                            <ul>
                                                {section.list.map((lang, i) => (
                                                    <li key={i}>{lang.language} – {lang.proficiency}</li>
                                                ))}
                                            </ul>
                                        </section>
                                    );
                                case 'references':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>References</h2>
                                            {section.list.map((ref, i) => (
                                                <div key={i}>
                                                    <p><strong>{ref.name}</strong>, {ref.position} at {ref.company}</p>
                                                    <p>Email: {ref.email} | Phone: {ref.phone}</p>
                                                </div>
                                            ))}
                                        </section>
                                    );
                                case 'project':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>Projects</h2>
                                            {section.list.map((proj, i) => (
                                                <div key={i}>
                                                    <strong>{proj.title}</strong>
                                                    <p>{proj.description}</p>
                                                </div>
                                            ))}
                                        </section>
                                    );
                                case 'volunteer':
                                    return (
                                        <section className="resume-section" key={idx}>
                                            <h2 style={{ color: selectedColor }}>Volunteer Experience</h2>
                                            {section.list.map((vol, i) => (
                                                <div key={i}>
                                                    <strong>{vol.role}</strong> – {vol.organization} ({vol.startDate} - {vol.endDate})
                                                    <p>{vol.description}</p>
                                                </div>
                                            ))}
                                        </section>
                                    );
                                default:
                                    return null;
                            }
                        })}
                    </div>
                </div>

                {/*<section className="input-field-section">
                    <p><label htmlFor="fullName">Full Name</label></p>
                    <p><input type="text" id="fullName" value={fullName} placeholder="Mary Jane" onChange={(e) => setFullName(e.target.value)} /></p>

                    <p><label htmlFor="email">Email Address</label></p>
                    <p><input type="email" id="email" value={email} placeholder="mary12@gmail.com" onChange={(e) => setEmail(e.target.value)} /></p>

                    <p><label htmlFor="address">Address</label></p>
                    <p><input type="text" id="address" value={address} placeholder="Cyberjaya, Selangor" onChange={(e) => setAddress(e.target.value)} /></p>

                    <p><label htmlFor="phone">Phone Number</label></p>
                    <p><input type="text" id="phone" value={phone} placeholder="012-3456789" onChange={(e) => setPhone(e.target.value)} /></p>

                    <button className="nextBtn">Next</button>
                </section>*/}


                /* === Layout Wrapper === */
.editor-container {
    display: flex;
    flex-direction: row;
    padding: 20px;
    gap: 20px;
}

/* === Sidebar Left === */
.sidebar-panel {
    width: 160px;
    background-color: #fff;
    border-right: 1px solid #ddd;
}

/* === Resume Preview (Middle) === */
.main-layout {
    flex: 2;
    border: 1px dashed #bbb;
    background-color: #fff;
    padding: 20px;
    height: fit-content;
}

/* === Form or AI (Right) === */
.form-editor {
    flex: 1.5;
    background-color: #f9f9f9;
    padding: 20px;
    border-left: 1px solid #ccc;
    display: flex;
    flex-direction: column;
    gap: 15px;
}

/* === Navigation Buttons === */
.form-navigation {
    margin-top: 20px;
    display: flex;
    gap: 10px;
}

.form-navigation button {
    padding: 10px 20px;
    background-color: #b857d2;
    color: white;
    border: none;
    cursor: pointer;
    border-radius: 6px;
}

.form-navigation button:hover {
    background-color: #9b40b3;
}

/* === Resume Sections Styling === */
.resume-section {
    margin-bottom: 20px;
}

.resume-section h2 {
    margin-bottom: 8px;
}

.resume-section p, .resume-section li {
    font-size: 14px;
}
